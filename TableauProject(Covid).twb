<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.21.0413.0840                               -->
<workbook original-version='18.1' source-build='2020.3.8 (20203.21.0413.0840)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0xd21rf1vfkyj413nkvn10ecvxlk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.13c58920n8ssg912ijvay0n6025t'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/USER/OneDrive/Documents/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13c58920n8ssg912ijvay0n6025t' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13c58920n8ssg912ijvay0n6025t' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_21979339F9EB479EB591669B4BDCF087]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_21979339F9EB479EB591669B4BDCF087]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_21979339F9EB479EB591669B4BDCF087]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_21979339F9EB479EB591669B4BDCF087]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Myanmar&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_21979339F9EB479EB591669B4BDCF087'>
            <properties context=''>
              <relation connection='excel-direct.13c58920n8ssg912ijvay0n6025t' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.15otyzi0lg11p81h51sy6047e31d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.00xrwgf09rakwe1csfvem0tercri'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/USER/OneDrive/Documents/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.00xrwgf09rakwe1csfvem0tercri' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.00xrwgf09rakwe1csfvem0tercri' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7B75FCC722584DF4A9B2891242410F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7B75FCC722584DF4A9B2891242410F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7B75FCC722584DF4A9B2891242410F00]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Myanmar&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7B75FCC722584DF4A9B2891242410F00'>
            <properties context=''>
              <relation connection='excel-direct.00xrwgf09rakwe1csfvem0tercri' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1lc9x760mvhto710nnhsq0bxrlzv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1d330b11rznqf41h1lk900w2mxf1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/USER/OneDrive/Documents/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1d330b11rznqf41h1lk900w2mxf1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D227:no:A1:D227:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1d330b11rznqf41h1lk900w2mxf1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D227:no:A1:D227:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D227:no:A1:D227:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D1423931EF454440B7130E1BD98925DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D1423931EF454440B7130E1BD98925DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D1423931EF454440B7130E1BD98925DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D1423931EF454440B7130E1BD98925DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D1423931EF454440B7130E1BD98925DF]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Myanmar&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D1423931EF454440B7130E1BD98925DF'>
            <properties context=''>
              <relation connection='excel-direct.1d330b11rznqf41h1lk900w2mxf1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D227:no:A1:D227:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1j0qvtg1h3py0j1a1sexa19idgpk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1l4nx5q07s32rc198l0br1jtwz4w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/USER/OneDrive/Documents/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l4nx5q07s32rc198l0br1jtwz4w' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l4nx5q07s32rc198l0br1jtwz4w' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0678DE6767E64BB9AE691FF218AEC525]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0678DE6767E64BB9AE691FF218AEC525]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0678DE6767E64BB9AE691FF218AEC525]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0678DE6767E64BB9AE691FF218AEC525]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0678DE6767E64BB9AE691FF218AEC525]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0678DE6767E64BB9AE691FF218AEC525]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Location]' derivation='Attribute' name='[attr:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Myanmar&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0678DE6767E64BB9AE691FF218AEC525'>
            <properties context=''>
              <relation connection='excel-direct.1l4nx5q07s32rc198l0br1jtwz4w' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0xd21rf1vfkyj413nkvn10ecvxlk' />
          </datasources>
          <datasource-dependencies datasource='federated.0xd21rf1vfkyj413nkvn10ecvxlk'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='46' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#898989' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{692038C3-437D-44E6-8D13-A55FF25B3F85}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.15otyzi0lg11p81h51sy6047e31d' />
          </datasources>
          <datasource-dependencies datasource='federated.15otyzi0lg11p81h51sy6047e31d'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.15otyzi0lg11p81h51sy6047e31d].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.15otyzi0lg11p81h51sy6047e31d].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.15otyzi0lg11p81h51sy6047e31d].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{1F63C192-8792-4FB4-A324-31A0F5142974}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1lc9x760mvhto710nnhsq0bxrlzv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lc9x760mvhto710nnhsq0bxrlzv'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[Longitude (generated)]' field-type='quantitative' max='-15721443.980516814' min='-68406550.714252889' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[Latitude (generated)]' field-type='quantitative' max='15822406.191316143' min='-14992602.007607576' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[sum:PercentPopulationInfected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[none:Location:nk]' />
              <color column='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lc9x760mvhto710nnhsq0bxrlzv].[Latitude (generated)]</rows>
        <cols>[federated.1lc9x760mvhto710nnhsq0bxrlzv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FE24537B-79F3-426D-B8D2-077A94A5FB02}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1j0qvtg1h3py0j1a1sexa19idgpk' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0qvtg1h3py0j1a1sexa19idgpk'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]' />
              <text column='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]' />
              <color column='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Forecast Indicator:nk]' />
              <lod column='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{7FDD51B8-D377-4081-BE72-7316EE2AED5F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='8' param='horz' w='98828' x='586' y='1042'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97916' id='6' w='87115' x='586' y='1042'>
              <zone h='24479' id='3' name='Sheet 1' w='49795' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='5' name='Sheet 3' w='37320' x='50381' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24479' id='10' name='Sheet 2' w='49795' x='586' y='25521'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='11' name='Sheet 4' w='87115' x='586' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='97916' id='7' is-fixed='true' param='vert' w='11713' x='87701' y='1042'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9506' id='9' name='Sheet 3' pane-specification-id='1' param='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[sum:PercentPopulationInfected:qk]' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='31250' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]&#10;[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Forecast Indicator:nk]' w='11713' x='87701' y='10548'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='14' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='13' param='vert' w='98828' x='586' y='1042'>
                <zone fixed-size='180' h='24479' id='3' is-fixed='true' name='Sheet 1' w='49795' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='5' is-fixed='true' name='Sheet 3' w='37320' x='50381' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9506' id='9' name='Sheet 3' pane-specification-id='1' param='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[sum:PercentPopulationInfected:qk]' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='180' h='24479' id='10' is-fixed='true' name='Sheet 2' w='49795' x='586' y='25521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='11' is-fixed='true' name='Sheet 4' w='87115' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='31250' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]&#10;[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Forecast Indicator:nk]' w='11713' x='87701' y='10548'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FD506CDE-8991-4A54-B144-A959AF219A17}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xd21rf1vfkyj413nkvn10ecvxlk].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D52EBD52-F02B-4F5A-A845-CCECC59A529B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15otyzi0lg11p81h51sy6047e31d].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3FFE0D4-B701-446E-AEDF-1F01A287E8BA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1lc9x760mvhto710nnhsq0bxrlzv].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lc9x760mvhto710nnhsq0bxrlzv].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{633114A1-18B0-46A3-86EB-9AAB44FACE4D}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]&#10;[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Forecast Indicator:nk]</field>
            <field>[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]</field>
            <field>[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68315883-017E-419B-8AA9-2C194261364D}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Location:nk]&#10;[federated.1j0qvtg1h3py0j1a1sexa19idgpk].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9667C528-1D69-4A6F-92F4-A53C58B06405}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='70' name='Sheet 1' width='192'>
      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
      RAAESfs/QinHl80NfiQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
